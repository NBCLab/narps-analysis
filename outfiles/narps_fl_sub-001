Running sub-001
Generating design matrices
['response', 'response*gain', 'response*loss', 'response*response', 'response_derivative', 'response_derivative*gain', 'response_derivative*loss', 'response_derivative*response', 'response_dispersion', 'response_dispersion*gain', 'response_dispersion*loss', 'response_dispersion*response', 'no_response', 'no_response_derivative', 'no_response_dispersion', 'censor_0', 'drift_1', 'drift_2', 'drift_3', 'drift_4', 'drift_5', 'drift_6', 'constant']
Index(['no_response', 'no_response_derivative', 'no_response_dispersion',
       'response', 'response_derivative', 'response_dispersion',
       'response*gain', 'response_derivative*gain', 'response_dispersion*gain',
       'response*loss', 'response_derivative*loss', 'response_dispersion*loss',
       'response*response', 'response_derivative*response',
       'response_dispersion*response', 'drift_1', 'drift_2', 'drift_3',
       'drift_4', 'drift_5', 'drift_6', 'constant', 'censor_0'],
      dtype='object')
['response', 'response*gain', 'response*loss', 'response*response', 'response_derivative', 'response_derivative*gain', 'response_derivative*loss', 'response_derivative*response', 'response_dispersion', 'response_dispersion*gain', 'response_dispersion*loss', 'response_dispersion*response', 'censor_0', 'drift_1', 'drift_2', 'drift_3', 'drift_4', 'drift_5', 'drift_6', 'constant']
Index(['response', 'response_derivative', 'response_dispersion',
       'response*gain', 'response_derivative*gain', 'response_dispersion*gain',
       'response*loss', 'response_derivative*loss', 'response_dispersion*loss',
       'response*response', 'response_derivative*response',
       'response_dispersion*response', 'drift_1', 'drift_2', 'drift_3',
       'drift_4', 'drift_5', 'drift_6', 'constant', 'censor_0'],
      dtype='object')
['response', 'response*gain', 'response*loss', 'response*response', 'response_derivative', 'response_derivative*gain', 'response_derivative*loss', 'response_derivative*response', 'response_dispersion', 'response_dispersion*gain', 'response_dispersion*loss', 'response_dispersion*response', 'drift_1', 'drift_2', 'drift_3', 'drift_4', 'drift_5', 'drift_6', 'constant']
Index(['response', 'response_derivative', 'response_dispersion',
       'response*gain', 'response_derivative*gain', 'response_dispersion*gain',
       'response*loss', 'response_derivative*loss', 'response_dispersion*loss',
       'response*response', 'response_derivative*response',
       'response_dispersion*response', 'drift_1', 'drift_2', 'drift_3',
       'drift_4', 'drift_5', 'drift_6', 'constant'],
      dtype='object')
['response', 'response*gain', 'response*loss', 'response*response', 'response_derivative', 'response_derivative*gain', 'response_derivative*loss', 'response_derivative*response', 'response_dispersion', 'response_dispersion*gain', 'response_dispersion*loss', 'response_dispersion*response', 'censor_0', 'censor_1', 'drift_1', 'drift_2', 'drift_3', 'drift_4', 'drift_5', 'drift_6', 'constant']
Index(['response', 'response_derivative', 'response_dispersion',
       'response*gain', 'response_derivative*gain', 'response_dispersion*gain',
       'response*loss', 'response_derivative*loss', 'response_dispersion*loss',
       'response*response', 'response_derivative*response',
       'response_dispersion*response', 'drift_1', 'drift_2', 'drift_3',
       'drift_4', 'drift_5', 'drift_6', 'constant', 'censor_0', 'censor_1'],
      dtype='object')
Designing contrasts
Fitting a GLM
Computing contrasts
	contrast id: response*gain
	contrast id: response_derivative*gain
	contrast id: response_dispersion*gain
	contrast id: response*loss
	contrast id: response_derivative*loss
	contrast id: response_dispersion*loss
	contrast id: response*response
	contrast id: response_derivative*response
	contrast id: response_dispersion*response
Combining contrasts into magnitude images

------------------------------------------------------------
Sender: LSF System <lsfadmin@n085>
Subject: Job 980628: <sub-001> Done

Job <sub-001> was submitted from host <v001> by user <tsalo006> in cluster <panther>.
Job was executed on host(s) <n085>, in queue <PQ_nbc>, as user <tsalo006> in cluster <panther>.
</home/tsalo006> was used as the home directory.
</home/data/nbc/Laird_NARPS/code> was used as the working directory.
Started at Fri Feb  8 18:04:59 2019
Results reported at Fri Feb  8 18:08:03 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash
#---Number of cores
#BSUB -n 1
#BSUB -R "span[ptile=1]"

#---Job's name in LSF system
#BSUB -J sub-001

#---Error file
#BSUB -eo /home/data/nbc/Laird_NARPS/code/errorfiles/narps_fl_sub-001

#---Output file
#BSUB -oo /home/data/nbc/Laird_NARPS/code/outfiles/narps_fl_sub-001

#---LSF Queue name
#BSUB -q PQ_nbc

##########################################################
# Set up environmental variables.
##########################################################
export NPROCS=`echo $LSB_HOSTS | wc -w`
export OMP_NUM_THREADS=$NPROCS

. $MODULESHOME/../global/profile.modules

##########################################################
##########################################################
# Load Python 3 environment
source /home/data/nbc/data-analysis/py3_environment

# Run model
python run_first_level.py sub-001

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :    163.88 sec.
    Max Memory :     10694 MB
    Max Swap   :     11796 MB

    Max Processes  :         5
    Max Threads    :         6

The output (if any) is above this job summary.



PS:

Read file </home/data/nbc/Laird_NARPS/code/errorfiles/narps_fl_sub-001> for stderr output of this job.

